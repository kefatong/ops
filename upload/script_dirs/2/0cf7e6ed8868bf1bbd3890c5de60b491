#!/usr/bin/env python

# Author : kefatong
# Created Date : 2016/06/06
# Version : 0.1


import re
import os
import shutil
from optparse import OptionParser
import sys


parser = OptionParser()
parser.add_option('-i', '--bond_ip', dest='bond_ip', help='please input bond ipaddress')
parser.add_option('-g', '--gateway_ip', dest='gateway_ip', help='please input gateway ipaddress')
(options, args) = parser.parse_args()




eth_active_ports = []
em_active_ports = []


bond_ip = options.bond_ip
gateway_ip = options.gateway_ip

if not bond_ip and not gateway_ip:
    print 'error bond_ip and gateway_ip'
    sys.exit(1)
    

bond_devices = []

eth_devices = [ 'eth' + str(device)  for device in range(0,20) ]
em_devices = [ 'em' + str(device)  for device in range(1,20) ]


def check_active_ports(devices):

    active_devices = []

    for device in devices:
        results = os.popen('ethtool {0}'.format(device))
        p = { 'device': None, 'active': False }
        for r in results.read().split('\n'):

            if re.search('Settings for', r):
                p['device'] = device
            if re.search('Link detected:', r):
                if re.search('yes', r):
                    p['active'] = True

                    active_devices.append(p)
                    p = { 'device': None, 'active': False }

    return active_devices



def check_ping_test(devices):
    for device in devices:
        print 'ifconfig {0} {1}'.format(device['device'], bond_ip)
        up_port = os.system('ifconfig {0} up'.format(device['device']))
        config_ip = os.system('ifconfig {0} {1}'.format(device['device'], bond_ip))
        test_ping = os.system('ping -c 2 -w 2 {0}'.format(gateway_ip))
        if test_ping == 0:
            bond_devices.append(device)

    return bond_devices

def config_bond_device(devices):

    #if len(devices) > 2:
    #    print 'devices > 2'
    #    sys.exit(1)


    for device in devices:
        print device
        with open('/etc/sysconfig/network-scripts/ifcfg-{0}'.format(device['device']), 'w') as device_file:
            device_template = '''
DEVICE={0}
TYPE=Ethernet
BOOTPROTO=none
IPV6INIT=no
USERCTL=no
ONBOOT=yes
MASTER=bond0
SLAVE=yes
NM_CONTROLLED=no
'''.format(device['device'])
            device_file.write(device_template)


    bond_template = '''
DEVICE=bond0
TYPE=Ethernet
BOOTPROTO=static
IPV6INIT=no
IPADDR={0}
NETMASK=255.255.255.0
GATEWAY={1}
DNS1=114.114.114.114
USERCTL=no
ONBOOT=yes
NM_CONTROLLED=no
BONDING_20480S="miimon=100 mode=active-backup"
'''.format(bond_ip, gateway_ip)

    with open('/etc/sysconfig/network-scripts/ifcfg-bond0', 'w') as device_bond_file:
        device_bond_file.write(bond_template)


    modprobe_template = '''
alias bond0 bonding
options bond0 miimon=100 mode=1
'''
    with open('/etc/modprobe.d/dist.conf', 'a+') as modprobe_file:
        modprobe_file.write(modprobe_template)

    _device = ''
    for d in devices:
        _device += '{0} '.format(d['device'])
    rc_local = 'ifenslave bond0 {0}\n'.format(_device)
    with open('/etc/rc.local', 'a+') as rc_local_file:
        rc_local_file.write(rc_local)

    os.system("sed -i '/bond_script.py/d' /etc/rc.local")


print config_bond_device(check_ping_test(check_active_ports(eth_devices)))
